train:
  data:
    data_dir: /project/share/zyr/data/train #训练数据路径
    ann_path: /project/share/zyr/data/train/test_use.txt # 训练label路径
    dataset: {type: MiniClassDataset, test_mode: False, data_aug: False} #类型固定
    dataloader: {batch_size: 16, num_workers: 0, shuffle: True, drop_last: True, pin_memory: True} #batch_size为单卡batch_size ; num_workers目前需设置为0
  freeze: #冻结backbone参数
    epoch: 5
    optim: {type: 'sgd', momentum: 0.9, weight_decay: 0.0004, iter_step: 1, lr_init: 0.0001} #iter_step为梯度累计的跨度
    scheduler:
      type: 'CosineDecayLR'
      lr_end: 0.000001
      warm_up_epoch: 0 #预热训练
  norm: #正常训练
    epoch: 10
    optim: { type: 'sgd', momentum: 0.9, weight_decay: 0.0004, iter_step: 1, lr_init: 0.001}
    scheduler:
      type: 'MultiStepLR'
      milestones: [ 2000,3000,3600 ]
      gamma: 0.1
val:
  dataset: {type: PairDataset, test_mode: True}
  dataloader: {batch_size: 128, num_workers: 4, shuffle: False, drop_last: False, pin_memory: True}
  database: #可以多个测试集，仿照下面写法即可
    - {name: 1800_align_4000, data_dir: /project/share/zyr/data/val, ann_path: /project/share/zyr/data/val/combined_4000.txt}
    - {name: 1800_align_8000, data_dir: /project/share/zyr/data/val, ann_path: /project/share/zyr/data/val/combined_8000.txt}
model:
  backbone:
    pretrained: ./weights/First_UnicornNet.pth #预训练模型
    net:
      type: unicorn_256
      out_channel: 256
      fp16: True #True表示混合精度训练，False为单精度
  head:
    net:
      num_class: 2 #类别数，需仔细确认
      type: SphereFace2
      magn_type: C
      alpha: 0.7
      r: 40
      m: 0.4
      t: 3.0
      lw: 10.
common:
  test_first: False #开始时进行一次测试，用于对比训练前后结果
  screen_intvl: 5 #屏幕展示/日志写入的跨度
  val_intvl: 15 #测试模型的跨度
  save_iters: [100] #保存模型的指定iter(每个epoch会自动保存一次)
  save_cfg_name: unicorn256.yml #保存一份当时的配置文件，用于训练追溯
  save_log_dir: ./project
  save_weight_dir: ./project








